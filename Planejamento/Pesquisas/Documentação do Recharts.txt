# Documentação do Recharts

## 1. Introdução ao Recharts

Recharts é uma biblioteca de visualização de dados baseada em **React** e **D3.js**. É altamente modular e permite criar gráficos interativos e responsivos com facilidade.

### Link para a documentação oficial:

[Documentação Oficial](https://recharts.org/en-US/)

---

## 2. Instalação

Para instalar o Recharts em um projeto React, utilize:

```bash
npm install recharts
```

---

## 3. Uso Básico

Exemplo de um **gráfico de linha**:

```tsx
import React from "react";
import { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from "recharts";

const data = [
  { name: "Jan", value: 400 },
  { name: "Fev", value: 300 },
  { name: "Mar", value: 500 },
];

const ExampleChart = () => (
  <ResponsiveContainer width="100%" height={300}>
    <LineChart data={data} margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>
      <CartesianGrid strokeDasharray="3 3" />
      <XAxis dataKey="name" />
      <YAxis />
      <Tooltip />
      <Legend />
      <Line type="monotone" dataKey="value" stroke="#8884d8" />
    </LineChart>
  </ResponsiveContainer>
);

export default ExampleChart;
```

---

## 4. Principais Componentes

- **`<LineChart>`** - Contêiner para gráfico de linha.
- **`<BarChart>`** - Contêiner para gráfico de barras.
- **`<PieChart>`** - Contêiner para gráfico de pizza.
- **`<XAxis>` e `<YAxis>`** - Configuração dos eixos X e Y.
- **`<Tooltip>`** - Exibe informações detalhadas ao passar o mouse.
- **`<Legend>`** - Adiciona uma legenda.
- **`<ResponsiveContainer>`** - Torna o gráfico responsivo.

---

## 5. Personalização

### Alterando cores e estilos

```tsx
<Line type="monotone" dataKey="value" stroke="#ff7300" strokeWidth={3} dot={{ r: 5, fill: "#ff7300" }} />
```

### Criando um tooltip personalizado

```tsx
const CustomTooltip = ({ active, payload }) => {
  if (!active || !payload || payload.length === 0) return null;
  return (
    <div style={{ background: "white", padding: "10px", borderRadius: "5px" }}>
      <p>{payload[0].name}: {payload[0].value}</p>
    </div>
  );
};

<Tooltip content={<CustomTooltip />} />
```

---

## 6. Recursos Adicionais

### **Animações**

#### **Animação Integrada**
O Recharts inclui animações por padrão, mas você pode ajustá-las:

```tsx
<Line dataKey="value" stroke="blue" animationDuration={1000} />
```

#### **Animação com React-Spring**
Para animações avançadas, pode-se usar `react-spring` para transições suaves.

---

### **Responsividade**

#### **Uso de `ResponsiveContainer`**
Ajusta automaticamente o tamanho do gráfico para o container pai.

```tsx
<ResponsiveContainer width="100%" height={400}>
  <LineChart data={data}>
    <Line dataKey="value" />
  </LineChart>
</ResponsiveContainer>
```

---

## 7. Recursos Adicionais

### **Artigos e Tutoriais**
- [Recharts no GitHub](https://github.com/recharts/recharts)

### **Vídeos**
- [Introdução ao Recharts](https://www.youtube.com/watch?v=zmKIJqNCcWY)
- [Gráficos no React com Recharts](https://www.youtube.com/watch?v=62gi6foGycA)


